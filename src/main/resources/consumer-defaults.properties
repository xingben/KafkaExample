###
### Consumer Basics
###

# The client id is a user-specified string sent in each request to help trace calls.  It should logically identify the
# application making the request.
#
#client.id=test-consumer

#A unique string that identifies the consumer group this consumer belongs to. 
#This property is required if the consumer uses either the group management 
#functionality by using subscribe(topic) or the Kafka-based offset management strategy.
#group.id="test-group"

#A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. 
#The client will make use of all servers irrespective of which servers are specified here for bootstrapping\u2014
#this list only impacts the initial hosts used to discover the full set of servers. 
#This list should be in the form host1:port1,host2:port2,.... 
#Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), 
#this list need not contain the full set of servers (you may want more than one, though, in case a server is down).
bootstrap.servers=benxing-linux3:9092,benxing-linux4:9092,benxing-linux2:9092

#Deserializer class for key that implements the Deserializer interface.
key.deserializer=org.apache.kafka.common.serialization.StringDeserializer

#Deserializer class for value that implements the Deserializer interface.
value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

#If true the consumer's offset will be periodically committed in the background.
enable.auto.commit=false

#The class name of the partition assignment strategy that the client will use to distribute partition 
#ownership amongst consumer instances when group management is used
partition.assignment.strategy=org.apache.kafka.clients.consumer.RoundRobinAssignor

#The expected time between heartbeats to the consumer coordinator when using Kafka's group management facilities. 
#Heartbeats are used to ensure that the consumer's session stays active and to facilitate rebalancing 
#when new consumers join or leave the group. The value must be set lower than session.timeout.ms, 
#but typically should be set no higher than 1/3 of that value. It can be adjusted even lower 
#to control the expected time for normal rebalances.
heartbeat.interval.ms=3000

#The timeout used to detect failures when using Kafka's group management facilities.
session.timeout.ms=30000

#The minimum amount of data the server should return for a fetch request. 
#If insufficient data is available the request will wait for that much data to accumulate 
#before answering the request. The default setting of 1 byte means that fetch requests 
#are answered as soon as a single byte of data is available or the fetch request times out 
#waiting for data to arrive. Setting this to something greater than 1 will cause the server 
#to wait for larger amounts of data to accumulate which can improve server throughput a bit 
#at the cost of some additional latency.
fetch.min.bytes=1024

#The maximum amount of time the server will block before answering the fetch request 
#if there isn't sufficient data to immediately satisfy the requirement given by fetch.min.bytes.
fetch.max.wait.ms=500
